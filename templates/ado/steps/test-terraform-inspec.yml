parameters:
  terraform_filepath: ''
  inspec_profilename: ''
  gemfile_path: ''

steps:

- bash: |
    echo "Logging in to Azure"
    az login --service-principal --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID
    az account set -s $ARM_SUBSCRIPTION_ID
  displayName: 'Login: Azure'
  env:
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: "$(azure_client_secret)"
    ARM_TENANT_ID: $(azure_tenant_id)

- bash: terraform plan -input=false -out=tfplan
  displayName: 'Terraform: plan'
  workingDirectory: ${{parameters.terraform_filepath}}
  env:
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: "$(azure_client_secret)"
    ARM_TENANT_ID: $(azure_tenant_id)

- bash: |
    terraform apply tfplan
  displayName: 'Terraform: apply'
  workingDirectory: ${{parameters.terraform_filepath}}
  env:
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: "$(azure_client_secret)"
    ARM_TENANT_ID: $(azure_tenant_id)
  name: tfapply

- bash: |
    echo "##vso[task.setvariable variable=terraform_created]true"
  displayName: 'Terraform: set created variable'
  workingDirectory: ${{parameters.terraform_filepath}}
  condition: succeeded() 

- bash: |
    $(bundle info inspec-bin | grep -w Path | sed -e 's/^[^:]*://g')/bin/inspec exec ./$INSPEC_PROFILENAME -t azure:// --reporter cli junit:$(System.DefaultWorkingDirectory)/inspec-results.xml
  displayName: 'Test: InSpec Azure'
  env:
    INSPEC_PROFILENAME: $(inspec_profilename)
    AZURE_SUBSCRIPTION_ID: $(azure_subscription_id)
    AZURE_CLIENT_ID: $(azure_client_id)
    AZURE_CLIENT_SECRET: "$(azure_client_secret)"
    AZURE_TENANT_ID: $(azure_tenant_id)
    CHEF_LICENSE: "accept-no-persist" # Required for Inspect v4.0 and above
  workingDirectory: ${{parameters.gemfile_path}}
  continueOnError: true

- task: PublishTestResults@2
  displayName: 'Publish: InSpec Azure Test Results'
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '**/inspec-results.xml' 
    searchFolder: '$(System.DefaultWorkingDirectory)'
    failTaskOnFailedTests: true 
    testRunTitle: Inspec
  condition: always()  # can't set logic to work with step conditions


- bash: |
    if [ "$TERRAFORM_CREATED" = "true" ]; then
        terraform destroy -auto-approve
    else
        echo "Terraform destroy not required"
    fi
  displayName: 'Terraform: clean-up'
  workingDirectory: ${{parameters.terraform_filepath}}
  env:
    TERRAFORM_CREATED: $(terraform_created) # set by tfapply step, above
    ARM_SUBSCRIPTION_ID: $(azure_subscription_id)
    ARM_CLIENT_ID: $(azure_client_id)
    ARM_CLIENT_SECRET: "$(azure_client_secret)"
    ARM_TENANT_ID: $(azure_tenant_id)
  condition: always()  # can't set logic to work with step conditions

